FIRST (CITY_BLOCK) = {city}
FIRST (CITY) = {identifier}
FIRST (BLOCK_TYPE_WID) = {building, road, park, river,marker,parking}
FIRST (BODY) = {lcurly}
FIRST (PARAMETER) = {lparen}
FIRST (ARGUMENTS_TAIL) = {comma}
FIRST (COMMAND_TYPE) = {line, bend, box, circ, polyline, mark}
FIRST (ADDITIVE_PRIM) = {plus, minus,epsilon}
FIRST (MULTIPLICATIVE_PRIM) = {times,divide, epsilon}
FIRST (UNARY) = {plus, minus, int, variable, lparen,real_num}
FIRST (PRIMARY)= {int, variable, lparen,real_num}
FIRST (SYNTAX) = {let}
FIRST (LET) = {let}
FIRST (MULTIPLICATIVE)= {plus, minus, int, variable, lparen,real_num}
FIRST (ADDITIVE) ={plus, minus, int, variable, lparen,real_num}
FIRST (ARGUMENT) = {plus, minus, int, variable, lparen,real_num}
FIRST (ARGUMENTS) = {plus, minus, int, variable, lparen,real_num}
FIRST (COMMAND) = {line, bend, box, circ, polyline, mark}
FIRST (BLOCK_STATEMENT) = {line, bend, box, circ, polylne, mark,let}
FIRST (BLOCK_STATEMENT_LIST) = {line, bend, box, circ, polylne,mark,epsilon,let}
FIRST (BLOCK) = {building, road, park, river, tree, junction,marker}
FIRST (ELEMENT) = {building, road, park, river, tree, junction, marker,let,parking}
FIRST (ELEMENTS_TAIL) = {building, road, park, river, tree, let,marker, epsilon,junction,parking}
FIRST (ELEMENTS) ={building, road, park, river, tree, junction,marker,let,parking}
FIRST (DECLARATIONS) ={let,epsilon}
FIRST (PROGRAM) = {let, city}
FIRST (VALUE_TYPE) = { plus, minus, int, varriable, lparen, new,real_num}


FOLLOW (PROGRAM) = EMPTY
FOLLOW (CITY_BLOCK) = EMPTY
FOLLOW (CITY) =EMPTY
FOLLOW (DECLARATIONS) = {city,line,bend,box,circ,polyline,mark,building,park,road,river,marker,parking}
FOLLOW (ELEMENTS) = {rcurly}
FOLLOW (BODY) = {semicolumn}
FOLLOW (ELEMENTS_TAIL) = {rcurly}
FOLLOW (ELEMENT) = {building, road, river, park, junction, tree, let, marker, rcurly,parking}
FOLLOW (BLOCK) = {building, road, river, park, junction, tree, let,marker, rcurly,parking}
FOLLOW (BLOCK_STATEMENT_LIST) = {rcurly}
FOLLOW (BLOCK_STATEMENT) = { line, bend, box, circ, polyline, mark, rcurly}
FOLLOW (BLOCK_TYPE_WID) = {identifier}
FOLLOW (COMMAND) = {line, bend, box, circ, polyline, mark}
FOLLOW (PARAMETER) = {line, bend, box, circ, polyline, mark}
FOLLOW (ARGUMENTS) = {rparen}
FOLLOW (ARGUMENTS_TAIL) = {rparen}
FOLLOW (COMMAND_TYPE) = {lparen}
FOLLOW (ARGUMENT) = {comma, rparen, semicolumn}
FOLLOW (ADDITIVE) = {comma, rparen, semicolumn}
FOLLOW (ADDITIVE_PRIM) = {comma, rparen, semicolumn}
FOLLOW (MULTIPLICATIVE) = {comma, rparen, semicolumn, plus, minus }
FOLLOW (MULTIPLICATIVE_PRIM) = {comma, rparen, semicolumn, plus, minus }
FOLLOW (UNARY) = {times, divide, plus, minus, comma, rparen, semicolumn}
FOLLOW (PRIMARY) = {times, divide, plus, minus, comma, rparen, semicolumn}
FOLLOW (LET) = {city,line,bend,box,circ,polyline,mark,building,park,road,river,marker,parking}
FOLLOW (VALUE_TYPE) = {semicolumn}
FOLLOW (SYNTAX) =  {plus, minus, int, variable, lparen,new,real_num}